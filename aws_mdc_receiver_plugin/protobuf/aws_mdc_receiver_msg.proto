// Copyright (c) 2017, The Regents of the University of California.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
// * Redistributions of source code must retain the above copyright notice, this
// list of conditions and the following disclaimer.
//
// * Redistributions in binary form must reproduce the above copyright notice,
// this list of conditions and the following disclaimer in the documentation
// and/or other materials provided with the distribution.
//
// * Neither the names of the copyright holders nor the names of their
// contributors may be used to endorse or promote products derived from this
// software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.

syntax = "proto3";

package sample.aws_mdc_receiver.pb;

/**
 * The function `clear()` for SequentialUpdate takes no parameters and clears all
 * state in the module.
 */
message AwsMdcReceiverCommandClearArg {
}

/**
 * The MdcReceiver module adds/maintains a list of (MAC address, label) tuples
 *
 * __Input Gates__: 1
 * __Output Gates__: 1
 */
message AwsMdcReceiverCommandAddArg {
  /**
   *
   */
  message Entry {
    string addr = 1; /// The MAC address to match
    uint32 label = 2; ///
  }
  repeated Entry entries = 1; /// A list of MACLabel entries.
}

/**
 * The SequentialUpdate module rewrites a specified field (`offset` and `size`) in a packet
 * with a sequentially increased value from a specified min to max values.
 *
 * __Input Gates__: 1
 * __Output Gates__: 1
 */
message AwsMdcReceiverArg {
  uint32 agent_id = 1; /// Agent ID
  string switch_ip = 2;
  string switch_mac = 3;
  string agent_ip = 4; // The IP
  string agent_mac = 5; /// The MAC address
}



